{"version":3,"sources":["../src/resolvers.js"],"names":["BASE_URL","API_KEY","process","env","fetchAddressAsJson","address","citystatezip","Promise","resolve","reject","fetchResult","text","data","err","result","codeText","code","resolvers","Query","searchProperties","obj","args"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAGA;AACA,IAAMA,WAAW,uDAAjB;AACA,IAAMC,UAAUC,QAAQC,GAAR,CAAYF,OAA5B;;AAEA,SAASG,kBAAT,CAA4BC,OAA5B,EAAqCC,YAArC,EAAmD;AAAA;;AACjD,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,yBAAST,QAAT,gBAA4BC,OAA5B,iBAA+CI,OAA/C,sBAAuEC,YAAvE,CADX;;AAAA;AACTI,yBADS;AAAA;AAAA,qBAEIA,YAAYC,IAAZ,EAFJ;;AAAA;AAETC,kBAFS;;AAAA,oBAIXA,QAAQ,IAJG;AAAA;AAAA;AAAA;;AAKbH,qBAAO,8BAAP;AALa;;AAAA;;AASf,uCAAYG,IAAZ,EAAkB,EAAlB,EAAsB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACrC,oBAAID,OAAO,IAAX,EAAiB;AACfJ,yBAAOI,GAAP;AACA;AACD;;AAED;AACA,oBAAME,WAAW,iCAAmBD,MAAnB,CAAjB;AACA,oBAAIC,YAAY,IAAZ,IAAoBA,SAASC,IAAT,KAAkB,GAA1C,EAA8C;AAC5CP,yBAAOM,QAAP;AACA;AACD;;AAEDP,wBAAQ,8BAAgBM,MAAhB,CAAR;AACD,eAdD;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAyBD;;AAEM,IAAMG,gCAAY;AACvBC,SAAO;AACLC,sBAAkB,0BAACC,GAAD,EAAMC,IAAN,EAAe;AAC/B,aAAOjB,mBAAmBiB,KAAKhB,OAAxB,EAAiCgB,KAAKf,YAAtC,CAAP;AACD;AAHI;AADgB,CAAlB","file":"resolvers.js","sourcesContent":["import fetch from 'node-fetch';\nimport {parseString} from 'xml2js';\nimport { getMessageCodeText, getPropertyInfo } from './helpers';\n\n\n// These probably should be added via ENV vars\nconst BASE_URL = 'http://www.zillow.com/webservice/GetSearchResults.htm';\nconst API_KEY = process.env.API_KEY\n\nfunction fetchAddressAsJson(address, citystatezip) {\n  return new Promise(async (resolve, reject) => {\n      const fetchResult = await fetch(`${BASE_URL}?zws-id=${API_KEY}&address=${address}&citystatezip=${citystatezip}`);  \n      const data = await fetchResult.text();\n\n      if (data == null) {\n        reject(\"Error hitting Zillow enpoint\")\n        return\n      }\n\n      parseString(data, {}, (err, result) => {\n        if (err != null) {\n          reject(err)\n          return\n        }\n        \n        // I'm making some structural assumptions, would add more error handling\n        const codeText = getMessageCodeText(result)\n        if (codeText == null || codeText.code !== \"0\"){\n          reject(codeText)\n          return\n        }\n\n        resolve(getPropertyInfo(result))\n      })\n  });\n}\n\nexport const resolvers = {\n  Query: {\n    searchProperties: (obj, args) => {\n      return fetchAddressAsJson(args.address, args.citystatezip);\n    },\n  },\n};\n"]}