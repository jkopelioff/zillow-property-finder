{"version":3,"sources":["../src/server.js"],"names":["PORT","process","env","server","use","origin","CORS_URL","bodyParser","json","schema","endpointURL","listen","console","log"],"mappings":";;AACA;;AACA;;;;AACA;;;;AACA;;AAIA;;;;AAEA;;;;AAEA,IAAMA,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,SAAS,wBAAf;;AAEAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,oBAAK,EAAEC,QAAQJ,QAAQC,GAAR,CAAYI,QAAZ,IAAwB,uBAAlC,EAAL,CAAhB;;AAEAH,OAAOC,GAAP,CAAW,UAAX,EAAuBG,qBAAWC,IAAX,EAAvB,EAA0C,0CAAe;AACvDC;AADuD,CAAf,CAA1C;;AAIAN,OAAOC,GAAP,CAAW,WAAX,EAAwB,2CAAgB;AACtCM,eAAa;AADyB,CAAhB,CAAxB;;AAIAP,OAAOQ,MAAP,CAAcX,IAAd,EAAoB;AAAA,SAClBY,QAAQC,GAAR,wDAAiEb,IAAjE,CADkB;AAAA,CAApB","file":"server.js","sourcesContent":["\nimport \"regenerator-runtime/runtime\";\nimport express from 'express';\nimport cors from 'cors';\nimport {\n  graphqlExpress,\n  graphiqlExpress,\n} from 'graphql-server-express';\nimport bodyParser from 'body-parser';\n\nimport { schema } from './schema';\n\nconst PORT = process.env.PORT || 4000;\nconst server = express();\n\nserver.use('*', cors({ origin: process.env.CORS_URL || 'http://localhost:3000' }));\n\nserver.use('/graphql', bodyParser.json(), graphqlExpress({\n  schema\n}));\n\nserver.use('/graphiql', graphiqlExpress({\n  endpointURL: '/graphql'\n}));\n\nserver.listen(PORT, () => \n  console.log(`GraphQL Server is now running on http://localhost:${PORT}`)\n);\n"]}