{"version":3,"sources":["../src/schema.js"],"names":["typeDefs","schema","resolvers"],"mappings":";;;;;;;AAAA;;AAKA;;AAEA,IAAMA,62BAAN;;AA2DA,IAAMC,SAAS,wCAAqB,EAAED,kBAAF,EAAYE,+BAAZ,EAArB,CAAf;QACSD,M,GAAAA,M","file":"schema.js","sourcesContent":["import {\n  makeExecutableSchema,\n  addMockFunctionsToSchema,\n} from 'graphql-tools';\n\nimport { resolvers } from './resolvers';\n\nconst typeDefs = `\ntype Result {\n  zpid: ID!\n  links: [Link!]!\n  address: Address!\n  zestimate: Zestimate!\n  localrealestate: LocalRealEstate!\n}\n\ntype Link {\n  type: String!\n  url: String!\n}\n\ntype Address {\n  street: String!\n  zipcode: String!\n  city: String!\n  state: String!\n  latitude: Float!\n  longitude: Float!\n}\n\ntype Currency {\n  value: Int!\n  type: String!\n}\n\ntype ValuationRange {\n  low: Currency!\n  high: Currency!\n}\n\ntype Zestimate {\n  amount: Currency!\n  lastUpdated: String!\n  valueChange: Currency!\n  valueChangeDuration: Int!\n  valuationRange: ValuationRange!\n  percentile: Int\n}\n\ntype Region {\n  name: String!\n  id: Int!\n  type: String!\n  zindexValue: String!\n  links:[Link!]!\n}\n\ntype LocalRealEstate {\n  region: Region! \n}\n\ntype Query {\n  searchProperties(address: String!, citystatezip: String!): Result!\n}\n`;\n\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\nexport { schema };\n"]}